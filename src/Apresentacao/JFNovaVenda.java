/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Apresentacao;

import DataAccess.CaixaDAO;
import DataAccess.MercadoriaDAO;
import DataAccess.VendaDAO;
import DataAccess.VendaMercadoriaDAO;
import DomainModel.Caixa;
import DomainModel.FContexto;
import DomainModel.Mercadoria;
import DomainModel.Venda;
import DomainModel.VendaMercadoria;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author geral
 */
public class JFNovaVenda extends javax.swing.JFrame {

    /**
     * Creates new form JFNovaVenda
     */
    public JFNovaVenda() {
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        jTProdutos.setRowSorter(new TableRowSorter(modelo));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTFData = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTProdutos = new javax.swing.JTable();
        jBAdicionar = new javax.swing.JButton();
        jBRemover = new javax.swing.JButton();
        jBNova = new javax.swing.JButton();
        jBFinalizar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTFCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTFQuantidade = new javax.swing.JTextField();
        jBProcurar = new javax.swing.JButton();
        jTFValorTotal = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTFData.setText("Data da Venda");

        jLabel3.setText("Produtos");

        jTProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Preço Unitário", "Quantidade", "Preço Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTProdutos.setEnabled(false);
        jTProdutos.getTableHeader().setReorderingAllowed(false);
        jTProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTProdutosMouseClicked(evt);
            }
        });
        jTProdutos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTProdutosPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTProdutos);

        jBAdicionar.setText("Adicionar");
        jBAdicionar.setEnabled(false);
        jBAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdicionarActionPerformed(evt);
            }
        });

        jBRemover.setText("Remover");
        jBRemover.setEnabled(false);
        jBRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRemoverActionPerformed(evt);
            }
        });

        jBNova.setText("Nova");
        jBNova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovaActionPerformed(evt);
            }
        });

        jBFinalizar.setText("Finalizar");
        jBFinalizar.setEnabled(false);
        jBFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFinalizarActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.setEnabled(false);
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jLabel12.setText("Valor Total: ");

        jTFCodigo.setEnabled(false);
        jTFCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCodigoActionPerformed(evt);
            }
        });
        jTFCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFCodigoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFCodigoKeyTyped(evt);
            }
        });

        jLabel2.setText("Código produto");

        jLabel4.setText("Quantidade");

        jTFQuantidade.setEnabled(false);
        jTFQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFQuantidadeActionPerformed(evt);
            }
        });
        jTFQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFQuantidadeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFQuantidadeKeyTyped(evt);
            }
        });

        jBProcurar.setText("Procurar mercadoria");
        jBProcurar.setEnabled(false);
        jBProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBProcurarActionPerformed(evt);
            }
        });

        jTFValorTotal.setText(" ");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Home.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jBAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBProcurar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBRemover))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTFData)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTFValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jLabel12)
                            .addGap(110, 110, 110))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(294, 294, 294)
                                    .addComponent(jLabel3))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jBNova, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jBFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jBCancelar)))
                            .addGap(0, 318, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jTFData))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTFQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAdicionar)
                    .addComponent(jBRemover)
                    .addComponent(jBProcurar))
                .addGap(65, 65, 65)
                .addComponent(jTFValorTotal)
                .addGap(65, 65, 65))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(102, 102, 102)
                    .addComponent(jLabel12)
                    .addGap(28, 28, 28)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBNova)
                        .addComponent(jBFinalizar)
                        .addComponent(jBCancelar))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        inicio();
    }//GEN-LAST:event_jBCancelarActionPerformed
    public void finaliza(){
        Venda venda = new Venda();
        VendaMercadoria vendaMercadoria = new VendaMercadoria();
        Mercadoria mercadoria = new Mercadoria();
        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        int size = modelo.getRowCount(), codigo;
        Date data = new Date();        
        venda.setData(data);
        String valorTotal = jTFValorTotal.getText();
        valorTotal = valorTotal.replace(".", "");
        valorTotal = valorTotal.replace(",", ".");  
        venda.setValorTotal(Float.parseFloat(valorTotal));
        venda.setCodigo(VendaDAO.getInstance().merge(venda));
        for(int i = 0; i < size; i++){
            vendaMercadoria = new VendaMercadoria();
            
            codigo = (int) jTProdutos.getModel().getValueAt(i, 0);
            
            mercadoria = MercadoriaDAO.getInstance().getById(codigo);
            vendaMercadoria.setIdVenda((int) venda.getCodigo());
            vendaMercadoria.setIdMercadoria(mercadoria.getCodigo());
            vendaMercadoria.setNome(mercadoria.getNome());
           
            //int aux =Integer.parseInt((String) jTProdutos.getModel().getValueAt(i, 3));
            vendaMercadoria.setQuantidade((int) jTProdutos.getModel().getValueAt(i, 3));                     
            
            //int aux2 =Integer.parseInt((String) jTProdutos.getModel().getValueAt(i, 3));     
            mercadoria.setQuantidade(mercadoria.getQuantidade() - ((int) jTProdutos.getModel().getValueAt(i, 3)));
            
            MercadoriaDAO.getInstance().merge(mercadoria);            
            VendaMercadoriaDAO.getInstance().persist(vendaMercadoria); 
            
        }
        
            Caixa caixa = new Caixa();
            CaixaDAO cdao = new CaixaDAO();
            caixa.setRetiradas(0);                
            caixa.setData(data);
            caixa.setSaldo(Float.parseFloat(valorTotal));    
            CaixaDAO.getInstance().merge(caixa);
        JOptionPane.showMessageDialog(this, " Venda realizada com sucesso!");
        inicio();
    }
    private void jBFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFinalizarActionPerformed
        /*Venda venda = new Venda();
        VendaMercadoria vendaMercadoria = new VendaMercadoria();
        Mercadoria mercadoria = new Mercadoria();
        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        int size = modelo.getRowCount(), codigo;
        Date data = new Date();        
        venda.setData(data);
        String valorTotal = jTFValorTotal.getText();
        valorTotal = valorTotal.replace(".", "");
        valorTotal = valorTotal.replace(",", ".");  
        venda.setValorTotal(Float.parseFloat(valorTotal));
        venda.setCodigo(VendaDAO.getInstance().merge(venda));
        for(int i = 0; i < size; i++){
            vendaMercadoria = new VendaMercadoria();
            
            codigo = (int) jTProdutos.getModel().getValueAt(i, 0);
            
            mercadoria = MercadoriaDAO.getInstance().getById(codigo);
            vendaMercadoria.setIdVenda((int) venda.getCodigo());
            vendaMercadoria.setIdMercadoria(mercadoria.getCodigo());
            vendaMercadoria.setNome(mercadoria.getNome());
           
            //int aux =Integer.parseInt((String) jTProdutos.getModel().getValueAt(i, 3));
            vendaMercadoria.setQuantidade((int) jTProdutos.getModel().getValueAt(i, 3));                     
            
            //int aux2 =Integer.parseInt((String) jTProdutos.getModel().getValueAt(i, 3));     
            mercadoria.setQuantidade(mercadoria.getQuantidade() - ((int) jTProdutos.getModel().getValueAt(i, 3)));
            
            MercadoriaDAO.getInstance().merge(mercadoria);            
             
            VendaMercadoriaDAO.getInstance().persist(vendaMercadoria);
            Caixa caixa = new Caixa();
            CaixaDAO cdao = new CaixaDAO();
            caixa.setRetiradas(0);                
            caixa.setData(data);
            caixa.setSaldo(Float.parseFloat(valorTotal));    
            CaixaDAO.getInstance().merge(caixa);
        }
        */
        String valorTotal = jTFValorTotal.getText();
        valorTotal = valorTotal.replace(".", "");
        valorTotal = valorTotal.replace(",", ".");  
        FContexto.getTroco().setValorTotal(Float.parseFloat(valorTotal));
        FContexto.getTroco().setVisible(true);     
    }//GEN-LAST:event_jBFinalizarActionPerformed

    private void jBNovaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovaActionPerformed
        String data;
        limpar();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        data = formatter.format(new Date());
        jTFData.setText(data);
        habilitarCampos();
        jBCancelar.setEnabled(true);
        jBNova.setEnabled(false);
    }//GEN-LAST:event_jBNovaActionPerformed

    private void jBRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRemoverActionPerformed
                DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        if (jTProdutos.getSelectedRow() >= 0) {
            modelo.removeRow(jTProdutos.getSelectedRow());
            jTProdutos.setModel(modelo);
        }

        int size = modelo.getRowCount();
        float valorTotal = (float) 0.0;

        for (int i = 0; i < size; i++) {
            valorTotal += (float) jTProdutos.getModel().getValueAt(i, 4);
        }

        String valor = String.valueOf(valorTotal);
        valor = valor.replace(".", ",");
        jTFValorTotal.setText(String.valueOf(valor));

        if (verificaCampos()) {
            jBFinalizar.setEnabled(true);
        } else {
            jBFinalizar.setEnabled(false);
        }
    }//GEN-LAST:event_jBRemoverActionPerformed

    private void jBAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdicionarActionPerformed
        Mercadoria m = new Mercadoria();
        int aux =Integer.parseInt(jTFCodigo.getText());
        int aux2 =Integer.parseInt(jTFQuantidade.getText());
        boolean valido = false;
         DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        int size = modelo.getRowCount();      
        int codigo;
        
        MercadoriaDAO mercadoria = new MercadoriaDAO();
        
        for (Mercadoria mer : mercadoria.findAll()) {
            if(mer.getCodigo()==aux){
                if(mer.getQuantidade()>=aux2){
                    valido=true;
                    break;
                }
            }
            
        }
        if(valido)
        for (int i = 0; i < size; i++) {
            codigo = (int) jTProdutos.getModel().getValueAt(i, 0);
            if (m.getCodigo() == codigo) {
                valido = false;
            }
        }
        if(valido){
        m = MercadoriaDAO.getInstance().getById(aux);
        setMercadoria(m,aux2);
        }else JOptionPane.showMessageDialog(this, "Dados incorretos");        
        /*Mercadoria m = new Mercadoria();
        int aux =Integer.parseInt(jTFCodigo.getText());   
        int aux2 =Integer.parseInt(jTFQuantidade.getText());  
        m = MercadoriaDAO.getInstance().getById((int)aux);
        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        int size = modelo.getRowCount();
        boolean valido = false;
        int codigo;
        float valorTotal = (float) 0.0;

        
        MercadoriaDAO mercadoria = new MercadoriaDAO();
        for (Mercadoria mer : mercadoria.findAll()) {
            if(mer.getCodigo()==aux){
                if(mer.getQuantidade()>=aux2){
                    valido=true;
                    break;
                }
            }
            
        }
        if(valido)
        for (int i = 0; i < size; i++) {
            codigo = (int) jTProdutos.getModel().getValueAt(i, 0);
            if (m.getCodigo() == codigo) {
                valido = false;
            }
        }
        
          
        if (valido) {
            modelo.addRow(new Object[]{
                m.getCodigo(),
                m.getNome(),
                m.getPrecoVenda(),
                jTFQuantidade.getText(),
                (m.getPrecoVenda()*aux2)
            });
           jBFinalizar.setEnabled(true);
           jTFCodigo.setText("");
           jTFQuantidade.setText("");
           jBAdicionar.setEnabled(false);
           jBRemover.setEnabled(true);
        }else
          JOptionPane.showMessageDialog(this, "Dados incorretos");

        size = modelo.getRowCount();

        for (int i = 0; i < size; i++) {
            valorTotal += (float) jTProdutos.getModel().getValueAt(i, 4);
        }

        String valor = String.valueOf(valorTotal);
        valor = valor.replace(".", ",");
        jTFValorTotal.setText(valor);
       
        
        */
    }//GEN-LAST:event_jBAdicionarActionPerformed

    private void jBProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBProcurarActionPerformed
        FContexto.getListarMercadorias().setVisible(true);
    }//GEN-LAST:event_jBProcurarActionPerformed

    private void jTFCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCodigoActionPerformed

    private void jTFQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFQuantidadeActionPerformed

    private void jTFCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCodigoKeyReleased
        if(verificaCampos())
            jBAdicionar.setEnabled(true);
        else 
            jBAdicionar.setEnabled(false);
    }//GEN-LAST:event_jTFCodigoKeyReleased

    private void jTFCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCodigoKeyTyped
       String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFCodigoKeyTyped

    private void jTFQuantidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFQuantidadeKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFQuantidadeKeyTyped

    private void jTFQuantidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFQuantidadeKeyReleased
       if(verificaCampos())
            jBAdicionar.setEnabled(true);
        else 
            jBAdicionar.setEnabled(false);
    }//GEN-LAST:event_jTFQuantidadeKeyReleased

    private void jTProdutosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTProdutosPropertyChange
        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        int size = modelo.getRowCount(), qt = 0, codigo = 0;

        if (jTProdutos.getSelectedRow() >= 0) {
            qt = (int) jTProdutos.getModel().getValueAt(jTProdutos.getSelectedRow(), 3);
            codigo = (int) jTProdutos.getModel().getValueAt(jTProdutos.getSelectedRow(), 0);
        }

        float vu, valorTotal = (float) 0.0;
        Mercadoria mercadoria = new Mercadoria();
        MercadoriaDAO mdao = new MercadoriaDAO();

        for (Mercadoria m : mdao.findAll()) {
            if (codigo == m.getCodigo()) {
                mercadoria = m;
                break;
            }
        }

        if (mercadoria.getQuantidade() < qt) {
            JOptionPane.showMessageDialog(this, " Quantidade indisponível em estoque!");
            jTProdutos.getModel().setValueAt(mercadoria.getQuantidade(), jTProdutos.getSelectedRow(), 3);
        }

        for (int i = 0; i < size; i++) {
            qt = (int) jTProdutos.getModel().getValueAt(i, 3);
            vu = (float) jTProdutos.getModel().getValueAt(i, 2);

            jTProdutos.getModel().setValueAt((qt * vu), i, 4);
        }

        for (int i = 0; i < size; i++) {
            valorTotal += (float) jTProdutos.getModel().getValueAt(i, 4);
        }

        String valor = String.valueOf(valorTotal);
        valor = valor.replace(".", ",");
        jTFValorTotal.setText(String.valueOf(valor));
    }//GEN-LAST:event_jTProdutosPropertyChange

    private void jTProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTProdutosMouseClicked
        if (jTProdutos.getSelectedRow() != -1) {
            jBRemover.setEnabled(true);
        }
    }//GEN-LAST:event_jTProdutosMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        FContexto.getHome().setVisible(true);
          dispose();
    }//GEN-LAST:event_formWindowClosing

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        FContexto.getHome().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFNovaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFNovaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFNovaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFNovaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFNovaVenda().setVisible(true);
            }
        });
    }
    
    private void limpar() {
        jTFCodigo.setText("");
        jTFData.setText("Data da Venda");
        jTFValorTotal.setText("");
        jTFQuantidade.setText("");

        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        modelo.setNumRows(0);
    }
     private void habilitarCampos() {
        jTProdutos.setEnabled(true);
        jBCancelar.setEnabled(true);
        //jBAdicionar.setEnabled(true);
        jTFCodigo.setEnabled(true);
        jTFQuantidade.setEnabled(true);
        jBProcurar.setEnabled(true);
    }
    private void inicio() {
        limpar();
        desabilitarCampos();
        jBNova.setEnabled(true);
        jBFinalizar.setEnabled(false);
        jBCancelar.setEnabled(false);
    }
    void desabilitarCampos() {
        jTProdutos.setEnabled(false);
        jBCancelar.setEnabled(true);
        jBAdicionar.setEnabled(false);
        jBRemover.setEnabled(false);
        jTFCodigo.setEnabled(false);
        jTFQuantidade.setEnabled(false);
        jBProcurar.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAdicionar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBFinalizar;
    private javax.swing.JButton jBNova;
    private javax.swing.JButton jBProcurar;
    private javax.swing.JButton jBRemover;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTFCodigo;
    private javax.swing.JLabel jTFData;
    private javax.swing.JTextField jTFQuantidade;
    private javax.swing.JLabel jTFValorTotal;
    private javax.swing.JTable jTProdutos;
    // End of variables declaration//GEN-END:variables

    public boolean verificaCampos(){
        boolean resp = true;
        
        if(jTFCodigo.getText().equals(""))
            resp = false;
        if(jTFQuantidade.getText().equals(""))
            resp = false;
        
        return resp;
    }

    public void setCampo(Mercadoria m){
        jTFCodigo.setText(String.valueOf(m.getCodigo()));
    }
    public void setMercadoria(Mercadoria m) {
        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        int size = modelo.getRowCount();
        boolean valido = true;
        int codigo;
        float valorTotal = (float) 0.0;

        for (int i = 0; i < size; i++) {
            codigo = (int) jTProdutos.getModel().getValueAt(i, 0);
            if (m.getCodigo() == codigo) {
                valido = false;
            }
        }

        if (valido) {
            modelo.addRow(new Object[]{
                m.getCodigo(),
                m.getNome(),
                m.getPrecoVenda(),
                1,
                m.getPrecoVenda()
            });
        }

        size = modelo.getRowCount();

        for (int i = 0; i < size; i++) {
            valorTotal += (float) jTProdutos.getModel().getValueAt(i, 4);
        }

        String valor = String.valueOf(valorTotal);
        valor = valor.replace(".", ",");
        jTFValorTotal.setText(valor);

        if (verificaCampos()) {
            jBFinalizar.setEnabled(true);
        } else {
            jBFinalizar.setEnabled(false);
        }
        jBFinalizar.setEnabled(true);
    }
    
    void setMercadoria(Mercadoria m, int aux2) {
        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        int size = modelo.getRowCount();
        boolean valido = true;
        int codigo;
        float valorTotal = (float) 0.0;

        for (int i = 0; i < size; i++) {
            codigo = (int) jTProdutos.getModel().getValueAt(i, 0);
            if (m.getCodigo() == codigo) {
                valido = false;
            }
        }

        if (valido) {
            modelo.addRow(new Object[]{
                m.getCodigo(),
                m.getNome(),
                m.getPrecoVenda(),
                aux2,
                (m.getPrecoVenda()*aux2)
            });
           jBFinalizar.setEnabled(true);
           jTFCodigo.setText("");
           jTFQuantidade.setText("");
           jBAdicionar.setEnabled(false);
           jBRemover.setEnabled(true);
        }

        size = modelo.getRowCount();

        for (int i = 0; i < size; i++) {
            valorTotal += (float) jTProdutos.getModel().getValueAt(i, 4);
        }

        String valor = String.valueOf(valorTotal);
        valor = valor.replace(".", ",");
        jTFValorTotal.setText(valor);

        if (verificaCampos()) {
            jBFinalizar.setEnabled(true);
        } else {
            jBFinalizar.setEnabled(false);
        }
        jBFinalizar.setEnabled(true);
    }
}
